@inject ProjectController ProjectController
@page "/projects/{Slug}"

@if (project != null)
{
    <div class="container py-5">
        <h2 class="display-5 fw-bold mb-3">@project.Title</h2>
        <p class="lead text-white mb-5">@project.Description</p>

        @if (project.TechStack?.Count > 0)
        {
            <h4 class="fw-semibold mb-3">Tech Stack</h4>
            <div class="d-flex flex-wrap gap-2 mb-5">
                @foreach (var tech in project.TechStack)
                {
                    <span class="badge rounded-pill bg-secondary px-3 py-2 fs-6">@tech</span>
                }
            </div>
        }

        <div class="mb-5 d-flex flex-wrap gap-3">
            @if (!string.IsNullOrWhiteSpace(project.LiveURL))
            {
                <a href="@project.LiveURL" target="_blank" class="btn btn-primary">🔗 Live Project</a>
            }

            @if (!string.IsNullOrWhiteSpace(project.GHRepoURL))
            {
                <a href="@project.GHRepoURL" target="_blank" class="btn btn-outline-light">
                    💻 GitHub Repo
                </a>
            }
        </div>

        @if (!string.IsNullOrWhiteSpace(project.LongDescription))
        {
            <div class="mt-4" style="max-width: 800px;">
                <p class="text-white">@project.LongDescription</p>
            </div>
        }
    </div>
}
else
{
    <div class="container py-5">
        <div class="alert alert-warning">Project not found.</div>
    </div>
}

@code
{
    [Parameter] public string Slug { get; set; }

    private ProjectModel? project;

    protected override async Task OnInitializedAsync()
    {
        project = await ProjectController.GetBySlug(Slug);
    }
}