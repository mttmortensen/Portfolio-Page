@page "/projects/{Slug}"

<h2>@Title</h2>
<p>@Description</p>


@if (TechStack.Length > 0)
{
	<h4>Tech Stack</h4>
	<ul>
		@foreach(var tech in TechStack)
		{
			<li>
				@tech
			</li>	
		}

	</ul>
}

@code 
{
	[Parameter] public string Slug { get; set; }

	private string Title;
	private string Description;
	private string[] TechStack;

	protected override void OnInitialized()
	{
		// Mock project data — will replace later with actual project model 
		// This just gives me a working skelton
		var projects = new Dictionary<string, (string Title, string Description, string[] TechStack)>
		{
			["jamf-api-tool"] = ("Jamf API Tool", "Automates Jamf device lookups and config updates.", new[] { "C#", ".NET", "Jamf API" }),
			["knowledge-center"] = ("Knowledge Center", "Track, tag, and organize technical knowledge.", new[] { "C#", "SQL", "WinForms" }),
			["seinfeld-api"] = ("Seinfeld API", "An API of quotes and episode data from Seinfeld.", new[] { "ASP.NET Core", "SQL Server" })
		};

		if(projects.TryGetValue(Slug.ToLower(), out var project))
		{
			Title = project.Title;
			Description = project.Description;
			TechStack = project.TechStack;
		}
		else
		{
			Title = "Project Not Found";
			Description = "We couldn't find that project.";
			TechStack = Array.Empty<string>();
		}
	}
}